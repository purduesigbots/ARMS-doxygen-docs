.TH "arms::MoveFlags" 3 "Sun Oct 16 2022" "ARMS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
arms::MoveFlags
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <flags\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBasync\fP"
.br
.ti -1c
.RI "bool \fBrelative\fP"
.br
.ti -1c
.RI "bool \fBthru\fP"
.br
.ti -1c
.RI "bool \fBreverse\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This struct contains the flags that are used to control the movement of the robot\&.
.br
There are 4 different flags for this struct, each of which is a boolean value\&.
.br
 The \fIASYNC\fP flag will cause the movement to be asynchronous, meaning that the robot will not wait for the movement to finish before continuing the code\&.
.br
The \fIRELATIVE\fP flag will cause the movement to be relative to the robot's current position, instead of global odom coordinates\&.
.br
The \fITHRU\fP flag will disable PID control for the movement, causing the robot to move at maximum speed for that movement\&.
.br
The \fIREVERSE\fP flag will cause the robot to move towards the movement using it's 'back' instead of it's 'front'\&. If you tell the robot to move to a point behind it without this flag, it will turn around and move to the point instead of moving backwards\&.
.br
.PP
\fBExample 1:\fP 
.PP
.nf
// create a MoveFlags object that is asynchronous and relative
MoveFlags option_1 = {true, true, false, false}; // create with vector
MoveFlags option_2 = arms::ASYNC | arms::RELATIVE; // create with flags

.fi
.PP
.PP
\fBExample 2:\fP 
.PP
.nf
// perform a chassis movement that is reverse, relative, and asynchronous
chassis\&.move({0, 0}, 100, {true, true, false, true}); // move with vector
chassis\&.move({0, 0}, 100, arms::REVERSE | arms::RELATIVE | arms::ASYNC); // move with flags

.fi
.PP
 
.SH "Member Data Documentation"
.PP 
.SS "boolean arms::MoveFlags::async"
Determines if the movement is asynchronous or not\&. 
.SS "boolean arms::MoveFlags::relative"
Determines if the movement is relative or not\&. 
.SS "boolean arms::MoveFlags::thru"
Determines if the movement should use PID or not\&. 
.SS "boolean arms::MoveFlags::reverse"
Determines if the movement is reverse or not\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for ARMS from the source code\&.
